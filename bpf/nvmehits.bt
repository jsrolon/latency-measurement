#!/usr/bin/env bpftrace

#include <linux/blkdev.h>
#include <linux/nvme.h>

BEGIN
{
        // from linux/nvme.h:
        @ioopcode[0x00] = "nvme_cmd_flush";
        @ioopcode[0x01] = "nvme_cmd_write";
        @ioopcode[0x02] = "nvme_cmd_read";
        @ioopcode[0x04] = "nvme_cmd_write_uncor";
        @ioopcode[0x05] = "nvme_cmd_compare";
        @ioopcode[0x08] = "nvme_cmd_write_zeroes";
        @ioopcode[0x09] = "nvme_cmd_dsm";
        @ioopcode[0x0d] = "nvme_cmd_resv_register";
        @ioopcode[0x0e] = "nvme_cmd_resv_report";
        @ioopcode[0x11] = "nvme_cmd_resv_acquire";
        @ioopcode[0x15] = "nvme_cmd_resv_release";
}

tracepoint:nvme:nvme_setup_cmd
{
    @start[args->cid] = nsecs;

    // opcode is not available once request is complete, so we store it
    @opcode[args->cid] = args->opcode;
}

tracepoint:nvme:nvme_complete_rq
/@start[args->cid]/
{
    $last_time = nsecs;
    $elapsed = $last_time - @start[args->cid];

    $opcode = @ioopcode[@opcode[args->cid]];

    printf("%s %d\n", $opcode, $elapsed);

    delete(@start[args->cid]);
    delete(@opcode[args->cid]);
}

END
{
    clear(@ioopcode); clear(@start); clear(@opcode);
}
